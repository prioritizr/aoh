# For help debugging build failures open an issue on the RStudio community with the 'github-actions' tag.
# https://community.rstudio.com/new-topic?category=Package%20development&tags=github-actions
on:
  schedule:
    - cron: 0 0 * * 1 # schedule to run at midnight on Monday each week
  push:
    branches:
      - main
      - master
  pull_request:
    branches:
      - main
      - master

name: Documentation

jobs:
  docs:
    runs-on: ${{ matrix.config.os }}

    name: docs

    strategy:
      fail-fast: false
      matrix:
        config:
          - {os: ubuntu-20.04, r: 'release', pkgs: 'all'}

    env:
      _R_REMOTES_NO_ERRORS_FROM_WARNINGS_: true
      _R_CHECK_FORCE_SUGGESTS_: false
      _R_CHECK_TIMINGS_: 10
      _R_CHECK_CRAN_INCOMING_REMOTE_: false
      GITHUB_PAT: ${{ secrets.GITHUB_TOKEN }}
      CI: true

    steps:
      - uses: actions/checkout@v2

      - uses: r-lib/actions/setup-pandoc@v2

      - uses: r-lib/actions/setup-r@v2
        with:
          r-version: ${{ matrix.config.r }}
          use-public-rspm: true

      - name: Install system dependencies
        run: |
          sudo add-apt-repository ppa:ubuntugis/ubuntugis-unstable
          sudo apt update
          sudo apt-get install \
            libgdal-dev libgeos-dev libproj-dev gdal-bin grass \
            libgmp3-dev libmpfr-dev libudunits2-dev \
            libharfbuzz-dev libfribidi-dev

      - uses: r-lib/actions/setup-r-dependencies@v2
        with:
          cache-version: 4
          extra-packages: |
            any::covr
            any::rcmdcheck
            any::XML
            any::remotes
            prepr=?ignore
            link2GI=?ignore
          needs: |
            check
            coverage

      - name: Install spatial R packages
        run: |
          options(repos = "https://cloud.r-project.org/")
          install.packages("rgdal")
          install.packages("sf")
          install.packages("terra")
          install.packages("lwgeom")
          install.packages("link2GI")
          remotes::install_github("dickoa/prepr")
        shell: Rscript {0}

      - name: Session information
        run: |
          options(width = 100)
          pkgs <- installed.packages()[, "Package"]
          sessioninfo::session_info(pkgs, include_base = TRUE)
        shell: Rscript {0}

      - name: Check URLs
        if: runner.os == 'Linux' && matrix.config.r == 'release'
        run: |
          result <- urlchecker::url_check()
          if (nrow(result) > 0) {
            print(result)
            stop("Invalid URLs detected")
          }
        shell: Rscript {0}
