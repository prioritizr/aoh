% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/misc_gdal.R
\name{terra_gdal_project}
\alias{terra_gdal_project}
\title{Project a raster using GDAL}
\usage{
terra_gdal_project(
  x,
  y,
  method = "bilinear",
  n_threads = 1,
  filename = tempfile(fileext = ".tif"),
  datatype = "FLT4S",
  cache_limit = 200,
  tiled = FALSE,
  verbose = TRUE,
  ...
)
}
\arguments{
\item{x}{\code{\link[terra:rast]{terra::rast()}} Raster object with source data.}

\item{y}{\code{\link[terra:rast]{terra::rast()}} Raster object specifying spatial properties for
output data.}

\item{method}{\code{character} Name of interpolation method.}

\item{n_threads}{\code{integer} Number of computational threads to use
for data processing.
To reduce run time, it is strongly recommended to set this
parameter based on available resources (see Examples section below).
Defaults to 1.}

\item{filename}{\code{character} Filename for output raster.
Defaults to \code{tempfile(fileext = ".tif")}.}

\item{datatype}{\code{character} Value indicating the data type for saving data.
Defaults to \code{"FLT4S"}.}

\item{cache_limit}{\code{integer} Number of MB to use for GDAL caching.
Defaults to 200.}

\item{tiled}{\code{logical} Value indicating if GeoTIFF files should be tiled.
Defaults to \code{FALSE}.}

\item{verbose}{\code{logical} should information be displayed during processing?
Defaults to \code{TRUE}.}

\item{...}{Arguments passed to \code{\link[terra:writeRaster]{terra::writeRaster()}}.}
}
\value{
A \code{\link[terra:rast]{terra::rast()}} raster object.
}
\description{
This function is a wrapper for \code{\link[gdalUtils:gdalwarp]{gdalUtils::gdalwarp()}}.
}
\examples{
# please ensure that the gdalUtils package is installed and
# GDAL system binaries are installed to run this example

\dontshow{if (is_gdal_available()) (if (getRversion() >= "3.4") withAutoprint else force)(\{ # examplesIf}
# create raster with data
x <- rast(
  ncols = 40, nrows = 40, xmin = -110, xmax = -90, ymin = 40, ymax=60,
  crs = "+proj=longlat +datum=WGS84"
)
values(x) <- seq_len(ncell(x))

# create raster to define spatial properties for projection
y <- rast(
  ncols = 94, nrows = 124, xmin = -944881, xmax = 935118, ymin = 4664377,
  ymax = 7144377,
  crs = "+proj=lcc +lat_1=48 +lat_2=33 +lon_0=-100 +datum=WGS84"
)

# project data
z <- terra_gdal_project(x, y)

# preview result
print(z)
\dontshow{\}) # examplesIf}
}
