% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/terra_gdal_rasterize.R
\name{terra_gdal_rasterize}
\alias{terra_gdal_rasterize}
\title{Convert vector data into a raster using GDAL}
\usage{
terra_gdal_rasterize(
  x,
  sf,
  burn = 1,
  init = 0,
  invert = FALSE,
  update = FALSE,
  touches = FALSE,
  n_threads = 1,
  filename = tempfile(fileext = ".tif"),
  sf_filename = tempfile(fileext = ".gpkg"),
  datatype = "FLT4S",
  cache_limit = 200,
  tiled = FALSE,
  bigtiff = FALSE,
  nbits = NULL,
  compress = "LZW",
  NAflag = NULL,
  output_raster = TRUE
)
}
\arguments{
\item{x}{\code{\link[terra:rast]{terra::rast()}} Raster object with source data.}

\item{sf}{\code{\link[sf:sf]{sf::st_sf()}} Spatial object to rasterize.}

\item{burn}{\code{numeric} Value for encoding the vector data.
Defaults to 1.}

\item{init}{\code{numeric} Value for encoding background cells that do not
overlap with the vector data.
Defaults to 0.}

\item{invert}{\code{logical} Should the burn process be inverted?
Defaults to \code{FALSE}.}

\item{update}{\code{logical} Should the result by producing by updating
the argument to \code{x}?
If \code{FALSE} then the argument to \code{x} is only used to specify the
spatial properties of the resulting raster
(i.e., values have on the result),
Defaults to \code{FALSE}.}

\item{touches}{\code{logical} Should cells of \code{x} that are overlap with any
part of \code{sf} be treated as covered by \code{sf}?
Defaults to \code{FALSE}, such that only cells that have their centroid
covered by \code{sf} are treated as covered.}

\item{n_threads}{\code{integer} Number of computational threads to use
for data processing.
To reduce run time, it is strongly recommended to set this
parameter based on available resources (see Examples section below).
Defaults to 1.}

\item{filename}{\code{character} Filename for output raster.
Defaults to \code{tempfile(fileext = ".tif")}.}

\item{sf_filename}{\code{character} File name to temporarily save argument
to \code{sf}.
Defaults to a temporary (geopackage) file.}

\item{datatype}{\code{character} Value indicating the data type for saving data.
Defaults to \code{"FLT4S"}.}

\item{cache_limit}{\code{integer} Number of MB to use for GDAL caching.
Defaults to 200.}

\item{tiled}{\code{logical} Value indicating if GeoTIFF files should be tiled.
Defaults to \code{FALSE}.}

\item{bigtiff}{\code{logical} Value indicating the data should be stored in
BIGTIFF format.
Defaults to \code{FALSE}.}

\item{nbits}{\code{integer} Number of bits for output data.
Defaults to \code{NULL} such that the number of bits is automatically
determined.}

\item{compress}{\code{character} Value indicating compression format.
Available options include \code{"LZW"} and \code{"DEFLATE"}.
Defaults to \code{"LZW"}.}

\item{NAflag}{\code{numeric} Value for representing missing (\code{NA}) values.
A \code{"none"} value can also be used to indicate that no flag should be set.
Defaults to \code{NULL} such that the value is determined automatically.}

\item{output_raster}{\code{logical} Should a raster (\code{\link[terra:rast]{terra::rast()}})
object be returned?
If \code{FALSE} then the file path for the resulting file is returned.
Defaults to \code{TRUE}.}
}
\value{
A \code{\link[terra:rast]{terra::rast()}} raster object.
}
\description{
This function is a wrapper for \code{\link[gdalUtilities:gdal_rasterize]{gdalUtilities::gdal_rasterize()}} for use with
\pkg{terra} objects.
}
\examples{
# please ensure that the gdalUtilities package is installed
# to run this example
\dontshow{if (requireNamespace("gdalUtilities", quietly = TRUE)) (if (getRversion() >= "3.4") withAutoprint else force)(\{ # examplesIf}
# import vector data
f <- system.file("ex/lux.shp", package = "terra")
sf <- read_sf(f)

# create template raster
x <- rast(vect(sf), ncols = 75, nrows = 100)
x <- terra::setValues(x, runif(terra::ncell(x)))

# rasterize vector data
z <- terra_gdal_rasterize(x, sf, burn = 5)

# plot result
plot(z)
\dontshow{\}) # examplesIf}
}
