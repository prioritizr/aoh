% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/misc_gdal.R
\name{terra_gdal_calc}
\alias{terra_gdal_calc}
\title{GDAL calculate}
\usage{
terra_gdal_calc(
  x,
  expr,
  filename = tempfile(fileext = ".tif"),
  datatype = "FLT4S",
  n_threads = 1,
  tiled = FALSE,
  verbose = TRUE,
  ...
)
}
\arguments{
\item{x}{\code{\link[terra:rast]{terra::rast()}} Raster object with source data.}

\item{expr}{\code{character} Value containing expression.}

\item{filename}{\code{character} Filename for output raster.
Defaults to \code{tempfile(fileext = ".tif")}.}

\item{datatype}{\code{character} Data type for output raster.}

\item{n_threads}{\code{integer} Number of computational threads to use
for data processing.
To reduce run time, it is strongly recommended to set this
parameter based on available resources (see Examples section below).
Defaults to 1.}

\item{tiled}{\code{logical} Value indicating if GeoTIFF files should be tiled.
Defaults to \code{FALSE}.}

\item{verbose}{\code{logical} should information be displayed during processing?
Defaults to \code{TRUE}.}

\item{...}{Arguments passed to \code{\link[terra:writeRaster]{terra::writeRaster()}}.}
}
\value{
A \code{\link[terra:rast]{terra::rast()}} raster object.
}
\description{
This function is a wrapper for the \code{gdal_calc.py} script.
}
\examples{
# please ensure that the gdalUtils package is installed and
# GDAL system binaries are installed to run this example

\dontshow{if (is_gdal_available() && is_gdal_calc_available()) (if (getRversion() >= "3.4") withAutoprint else force)(\{ # examplesIf}
# create raster with data
x <- rast(
  ncols = 40, nrows = 40, xmin = -110, xmax = -90, ymin = 40, ymax=60,
  crs = "+proj=longlat +datum=WGS84"
)
values(x) <- seq_len(ncell(x))

# run calculation
y <- terra_gdal_calc(x, "(X < 20) * 1")

# preview result
print(y)
\dontshow{\}) # examplesIf}
}
