% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/terra_gdal_calc.R
\name{terra_gdal_calc}
\alias{terra_gdal_calc}
\title{GDAL calculate}
\usage{
terra_gdal_calc(
  x,
  expr,
  y = NULL,
  z = NULL,
  n_threads = 1,
  filename = tempfile(fileext = ".tif"),
  datatype = "FLT4S",
  tiled = FALSE,
  bigtiff = FALSE,
  compress = "LZW",
  predictor = 1,
  nbits = NULL,
  verbose = TRUE,
  NAflag = NULL,
  output_raster = TRUE
)
}
\arguments{
\item{x}{\code{\link[terra:rast]{terra::rast()}} Raster object with source data.}

\item{expr}{\code{character} Value containing expression.}

\item{y}{\code{terra::rast()} Optional raster for calculations.}

\item{z}{\code{terra::rast()} Optional raster for calculations.}

\item{n_threads}{\code{integer} Number of computational threads to use
for data processing.
To reduce run time, it is strongly recommended to set this
parameter based on available resources (see Examples section below).
Defaults to 1.}

\item{filename}{\code{character} Filename for output raster.
Defaults to \code{tempfile(fileext = ".tif")}.}

\item{datatype}{\code{character} Value indicating the data type for saving data.
Defaults to \code{"FLT4S"}.}

\item{tiled}{\code{logical} Value indicating if GeoTIFF files should be tiled.
Defaults to \code{FALSE}.}

\item{bigtiff}{\code{logical} Value indicating the data should be stored in
BIGTIFF format.
Defaults to \code{FALSE}.}

\item{compress}{\code{character} Value indicating compression format.
Available options include \code{"LZW"} and \code{"DEFLATE"}.
Defaults to \code{"LZW"}.}

\item{predictor}{\code{integer} Predictor for GeoTIFF compression
(see \href{https://gdal.org/drivers/raster/gtiff.html}{GDAL documentation}).
Defaults to 1 such that no predictor is used for compression.}

\item{nbits}{\code{integer} Number of bits for output data.
Defaults to \code{NULL} such that the number of bits is automatically
determined.}

\item{verbose}{\code{logical} Should information be displayed during processing?
Defaults to \code{TRUE}.}

\item{NAflag}{\code{numeric} Value for representing missing (\code{NA}) values.
A \code{"none"} value can also be used to indicate that no flag should be set.
Defaults to \code{NULL} such that the value is determined automatically.}

\item{output_raster}{\code{logical} Should a raster (\code{\link[terra:rast]{terra::rast()}})
object be returned?
If \code{FALSE} then the file path for the resulting file is returned.
Defaults to \code{TRUE}.}
}
\value{
A \code{\link[terra:rast]{terra::rast()}} raster object.
}
\description{
This function is a wrapper for the \code{gdal_calc.py} script for use with
\pkg{terra} objects.
}
\examples{
# please ensure that the Python and the GDAL system binaries are
# installed to run the example,
# see ?is_gdal_calc_available for more details

\dontrun{
# create raster with data
x <- rast(
  ncols = 40, nrows = 40, xmin = -110, xmax = -90, ymin = 40, ymax=60,
  crs = "+proj=longlat +datum=WGS84"
)
values(x) <- seq_len(ncell(x))

# run calculation
y <- terra_gdal_calc(x, "(X < 20) * 1")

# preview result
print(y)
}
}
\seealso{
See the package README for instructions to install the GDAL dependencies
for this function. The \code{\link[=is_osgeo4w_available]{is_osgeo4w_available()}} and
\code{\link[=is_gdal_calc_available]{is_gdal_calc_available()}} can be used to check if the installation
was successful.
}
